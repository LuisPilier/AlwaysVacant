"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMappedImportsRuleConfig = exports.getMappedImportsRule = void 0;
const tslint_rules_1 = require("@nativescript/tslint-rules");
const RULE_NAME = 'prefer-mapped-imports';
function getMappedImportsRule(compilerOptions) {
    const tslintRuleArguments = getMappedImportsArguments(compilerOptions);
    if (!tslintRuleArguments) {
        return;
    }
    const rule = new tslint_rules_1.PreferMappedImportsRule({
        ruleArguments: [tslintRuleArguments],
        ruleName: RULE_NAME,
        ruleSeverity: 'error',
        disabledIntervals: [],
    });
    return rule;
}
exports.getMappedImportsRule = getMappedImportsRule;
function getMappedImportsRuleConfig(compilerOptions) {
    const tslintRuleArguments = getMappedImportsArguments(compilerOptions);
    if (!tslintRuleArguments) {
        return;
    }
    const ruleOptions = [
        true,
        tslintRuleArguments,
    ];
    return {
        name: RULE_NAME,
        options: ruleOptions,
    };
}
exports.getMappedImportsRuleConfig = getMappedImportsRuleConfig;
function getMappedImportsArguments(compilerOptions) {
    const remapOptions = tslint_rules_1.parseCompilerOptions(compilerOptions);
    if (!remapOptions) {
        return;
    }
    const { prefix, prefixMappedTo, baseUrl } = remapOptions;
    const tslintRuleArguments = {
        prefix,
        'prefix-mapped-to': prefixMappedTo,
        'base-url': baseUrl,
    };
    return tslintRuleArguments;
}
//# sourceMappingURL=mapped-imports-rule-utils.js.map