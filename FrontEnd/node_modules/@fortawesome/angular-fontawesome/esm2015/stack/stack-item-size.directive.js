import { Directive, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export class FaStackItemSizeDirective {
    constructor() {
        /**
         * Specify whether icon inside {@link FaStackComponent} should be rendered in
         * regular size (1x) or as a larger icon (2x).
         */
        this.stackItemSize = '1x';
    }
    ngOnChanges(changes) {
        if ('size' in changes) {
            throw new Error('fa-icon is not allowed to customize size when used inside fa-stack. ' +
                'Set size on the enclosing fa-stack instead: <fa-stack size="4x">...</fa-stack>.');
        }
    }
}
FaStackItemSizeDirective.ɵfac = function FaStackItemSizeDirective_Factory(t) { return new (t || FaStackItemSizeDirective)(); };
FaStackItemSizeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FaStackItemSizeDirective, selectors: [["fa-icon", "stackItemSize", ""], ["fa-duotone-icon", "stackItemSize", ""]], inputs: { stackItemSize: "stackItemSize", size: "size" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
FaStackItemSizeDirective.propDecorators = {
    stackItemSize: [{ type: Input }],
    size: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FaStackItemSizeDirective, [{
        type: Directive,
        args: [{
                // tslint:disable-next-line:directive-selector
                selector: 'fa-icon[stackItemSize],fa-duotone-icon[stackItemSize]'
            }]
    }], function () { return []; }, { stackItemSize: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhY2staXRlbS1zaXplLmRpcmVjdGl2ZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9zdGFjay9zdGFjay1pdGVtLXNpemUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUE0QixNQUFNLGVBQWUsQ0FBQzs7QUFRM0UsTUFBTSxPQUFPLHdCQUF3QjtBQUFHLElBSnhDO0FBQ0csUUFJRDtBQUNGO0FBQ007QUFFQSxXQUREO0FBQ0wsUUFBVyxrQkFBYSxHQUFnQixJQUFJLENBQUM7QUFDN0MsSUFjQSxDQUFDO0FBQ0QsSUFURSxXQUFXLENBQUMsT0FBc0I7QUFDcEMsUUFBSSxJQUFJLE1BQU0sSUFBSSxPQUFPLEVBQUU7QUFDM0IsWUFBTSxNQUFNLElBQUksS0FBSyxDQUNiLHNFQUFzRTtBQUM5RSxnQkFBVSxpRkFBaUYsQ0FDcEYsQ0FBQztBQUNSLFNBQUs7QUFDTCxJQUFFLENBQUM7QUFDSDtvREF4QkMsU0FBUyxTQUFDLGtCQUNUO01BQThDLGlCQUM5QyxRQUFRLEVBQUUsdURBQXVELGVBQ2xFLGtMQUNJO0FBQUM7QUFBNEMsNEJBSy9DLEtBQUs7QUFBSyxtQkFLVixLQUFLO0FBQUk7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNpemVQcm9wIH0gZnJvbSAnQGZvcnRhd2Vzb21lL2ZvbnRhd2Vzb21lLXN2Zy1jb3JlJztcbmltcG9ydCB7IEZhU3RhY2tDb21wb25lbnQgfSBmcm9tICcuL3N0YWNrLmNvbXBvbmVudCc7XG5cbkBEaXJlY3RpdmUoe1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6ZGlyZWN0aXZlLXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAnZmEtaWNvbltzdGFja0l0ZW1TaXplXSxmYS1kdW90b25lLWljb25bc3RhY2tJdGVtU2l6ZV0nLFxufSlcbmV4cG9ydCBjbGFzcyBGYVN0YWNrSXRlbVNpemVEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAvKipcbiAgICogU3BlY2lmeSB3aGV0aGVyIGljb24gaW5zaWRlIHtAbGluayBGYVN0YWNrQ29tcG9uZW50fSBzaG91bGQgYmUgcmVuZGVyZWQgaW5cbiAgICogcmVndWxhciBzaXplICgxeCkgb3IgYXMgYSBsYXJnZXIgaWNvbiAoMngpLlxuICAgKi9cbiAgQElucHV0KCkgc3RhY2tJdGVtU2l6ZTogJzF4JyB8ICcyeCcgPSAnMXgnO1xuXG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIEBJbnB1dCgpIHNpemU/OiBTaXplUHJvcDtcblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKCdzaXplJyBpbiBjaGFuZ2VzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdmYS1pY29uIGlzIG5vdCBhbGxvd2VkIHRvIGN1c3RvbWl6ZSBzaXplIHdoZW4gdXNlZCBpbnNpZGUgZmEtc3RhY2suICcgK1xuICAgICAgICAgICdTZXQgc2l6ZSBvbiB0aGUgZW5jbG9zaW5nIGZhLXN0YWNrIGluc3RlYWQ6IDxmYS1zdGFjayBzaXplPVwiNHhcIj4uLi48L2ZhLXN0YWNrPi4nLFxuICAgICAgKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==