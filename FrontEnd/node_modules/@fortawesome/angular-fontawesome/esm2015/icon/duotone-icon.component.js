import { Component, Input } from '@angular/core';
import { FaIconComponent } from './icon.component';
import * as ɵngcc0 from '@angular/core';
export class FaDuotoneIconComponent extends FaIconComponent {
    findIconDefinition(i) {
        const definition = super.findIconDefinition(i);
        if (definition != null && !Array.isArray(definition.icon[4])) {
            throw new Error('The specified icon does not appear to be a Duotone icon. ' +
                'Check that you specified the correct style: ' +
                `<fa-duotone-icon [icon]="['fad', '${definition.iconName}']"></fa-duotone-icon> ` +
                `or use: <fa-icon icon="${definition.iconName}"></fa-icon> instead.`);
        }
        return definition;
    }
    buildParams() {
        const params = super.buildParams();
        if (this.swapOpacity === true || this.swapOpacity === 'true') {
            params.classes.push('fa-swap-opacity');
        }
        if (this.primaryOpacity != null) {
            params.styles['--fa-primary-opacity'] = this.primaryOpacity.toString();
        }
        if (this.secondaryOpacity != null) {
            params.styles['--fa-secondary-opacity'] = this.secondaryOpacity.toString();
        }
        if (this.primaryColor != null) {
            params.styles['--fa-primary-color'] = this.primaryColor;
        }
        if (this.secondaryColor != null) {
            params.styles['--fa-secondary-color'] = this.secondaryColor;
        }
        return params;
    }
}
FaDuotoneIconComponent.ɵfac = function FaDuotoneIconComponent_Factory(t) { return ɵFaDuotoneIconComponent_BaseFactory(t || FaDuotoneIconComponent); };
FaDuotoneIconComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FaDuotoneIconComponent, selectors: [["fa-duotone-icon"]], inputs: { swapOpacity: "swapOpacity", primaryOpacity: "primaryOpacity", secondaryOpacity: "secondaryOpacity", primaryColor: "primaryColor", secondaryColor: "secondaryColor" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function FaDuotoneIconComponent_Template(rf, ctx) { }, encapsulation: 2 });
FaDuotoneIconComponent.propDecorators = {
    swapOpacity: [{ type: Input }],
    primaryOpacity: [{ type: Input }],
    secondaryOpacity: [{ type: Input }],
    primaryColor: [{ type: Input }],
    secondaryColor: [{ type: Input }]
};
const ɵFaDuotoneIconComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(FaDuotoneIconComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FaDuotoneIconComponent, [{
        type: Component,
        args: [{
                selector: 'fa-duotone-icon',
                template: ``
            }]
    }], null, { swapOpacity: [{
            type: Input
        }], primaryOpacity: [{
            type: Input
        }], secondaryOpacity: [{
            type: Input
        }], primaryColor: [{
            type: Input
        }], secondaryColor: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHVvdG9uZS1pY29uLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9pY29uL2R1b3RvbmUtaWNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQU1uRCxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsZUFBZTtBQUMzRCxJQXlDWSxrQkFBa0IsQ0FBQyxDQUE0QjtBQUFJLFFBQzNELE1BQU0sVUFBVSxHQUFHLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuRCxRQUNJLElBQUksVUFBVSxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ2xFLFlBQU0sTUFBTSxJQUFJLEtBQUssQ0FDYiwyREFBMkQ7QUFDbkUsZ0JBQVUsOENBQThDO0FBQ3hELGdCQUFVLHFDQUFxQyxVQUFVLENBQUMsUUFBUSx5QkFBeUI7QUFDM0YsZ0JBQVUsMEJBQTBCLFVBQVUsQ0FBQyxRQUFRLHVCQUF1QixDQUN2RSxDQUFDO0FBQ1IsU0FBSztBQUNMLFFBQ0ksT0FBTyxVQUFVLENBQUM7QUFDdEIsSUFBRSxDQUFDO0FBQ0gsSUFDWSxXQUFXO0FBQ3ZCLFFBQUksTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ3ZDLFFBQ0ksSUFBSSxJQUFJLENBQUMsV0FBVyxLQUFLLElBQUksSUFBSSxJQUFJLENBQUMsV0FBVyxLQUFLLE1BQU0sRUFBRTtBQUNsRSxZQUFNLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUM7QUFDN0MsU0FBSztBQUNMLFFBQUksSUFBSSxJQUFJLENBQUMsY0FBYyxJQUFJLElBQUksRUFBRTtBQUNyQyxZQUFNLE1BQU0sQ0FBQyxNQUFNLENBQUMsc0JBQXNCLENBQUMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxDQUFDO0FBQzdFLFNBQUs7QUFDTCxRQUFJLElBQUksSUFBSSxDQUFDLGdCQUFnQixJQUFJLElBQUksRUFBRTtBQUN2QyxZQUFNLE1BQU0sQ0FBQyxNQUFNLENBQUMsd0JBQXdCLENBQUMsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLENBQUM7QUFDakYsU0FBSztBQUNMLFFBQUksSUFBSSxJQUFJLENBQUMsWUFBWSxJQUFJLElBQUksRUFBRTtBQUNuQyxZQUFNLE1BQU0sQ0FBQyxNQUFNLENBQUMsb0JBQW9CLENBQUMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO0FBQzlELFNBQUs7QUFDTCxRQUFJLElBQUksSUFBSSxDQUFDLGNBQWMsSUFBSSxJQUFJLEVBQUU7QUFDckMsWUFBTSxNQUFNLENBQUMsTUFBTSxDQUFDLHNCQUFzQixDQUFDLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQztBQUNsRSxTQUFLO0FBQ0wsUUFDSSxPQUFPLE1BQU0sQ0FBQztBQUNsQixJQUFFLENBQUM7QUFDSDtrREFsRkMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSxpQkFBaUIsa0JBQzNCLFFBQVEsRUFBRSxFQUFFO01BQ2IsMGJBQ0k7QUFBQztBQUEwQywwQkFRN0MsS0FBSztBQUFLLDZCQVFWLEtBQUs7QUFBSywrQkFRVixLQUFLO0FBQUssMkJBUVYsS0FBSztBQUFLLDZCQVFWLEtBQUs7QUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJY29uRGVmaW5pdGlvbiwgSWNvblByb3AgfSBmcm9tICdAZm9ydGF3ZXNvbWUvZm9udGF3ZXNvbWUtc3ZnLWNvcmUnO1xuaW1wb3J0IHsgRmFJY29uQ29tcG9uZW50IH0gZnJvbSAnLi9pY29uLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2ZhLWR1b3RvbmUtaWNvbicsXG4gIHRlbXBsYXRlOiBgYCxcbn0pXG5leHBvcnQgY2xhc3MgRmFEdW90b25lSWNvbkNvbXBvbmVudCBleHRlbmRzIEZhSWNvbkNvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBTd2FwIHRoZSBkZWZhdWx0IG9wYWNpdHkgb2YgZWFjaCBkdW90b25lIGljb27igJlzIGxheWVycy4gVGhpcyB3aWxsIG1ha2UgYW5cbiAgICogaWNvbuKAmXMgcHJpbWFyeSBsYXllciBoYXZlIHRoZSBkZWZhdWx0IG9wYWNpdHkgb2YgNDAlIHJhdGhlciB0aGFuIGl0c1xuICAgKiBzZWNvbmRhcnkgbGF5ZXIuXG4gICAqXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBASW5wdXQoKSBzd2FwT3BhY2l0eT86ICd0cnVlJyB8ICdmYWxzZScgfCBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBDdXN0b21pemUgdGhlIG9wYWNpdHkgb2YgdGhlIHByaW1hcnkgaWNvbiBsYXllci5cbiAgICogVmFsaWQgdmFsdWVzIGFyZSBpbiByYW5nZSBbMCwgMS4wXS5cbiAgICpcbiAgICogQGRlZmF1bHQgMS4wXG4gICAqL1xuICBASW5wdXQoKSBwcmltYXJ5T3BhY2l0eT86IHN0cmluZyB8IG51bWJlcjtcblxuICAvKipcbiAgICogQ3VzdG9taXplIHRoZSBvcGFjaXR5IG9mIHRoZSBzZWNvbmRhcnkgaWNvbiBsYXllci5cbiAgICogVmFsaWQgdmFsdWVzIGFyZSBpbiByYW5nZSBbMCwgMS4wXS5cbiAgICpcbiAgICogQGRlZmF1bHQgMC40XG4gICAqL1xuICBASW5wdXQoKSBzZWNvbmRhcnlPcGFjaXR5Pzogc3RyaW5nIHwgbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBDdXN0b21pemUgdGhlIGNvbG9yIG9mIHRoZSBwcmltYXJ5IGljb24gbGF5ZXIuXG4gICAqIEFjY2VwdHMgYW55IHZhbGlkIENTUyBjb2xvciB2YWx1ZS5cbiAgICpcbiAgICogQGRlZmF1bHQgQ1NTIGluaGVyaXRlZCBjb2xvclxuICAgKi9cbiAgQElucHV0KCkgcHJpbWFyeUNvbG9yPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBDdXN0b21pemUgdGhlIGNvbG9yIG9mIHRoZSBzZWNvbmRhcnkgaWNvbiBsYXllci5cbiAgICogQWNjZXB0cyBhbnkgdmFsaWQgQ1NTIGNvbG9yIHZhbHVlLlxuICAgKlxuICAgKiBAZGVmYXVsdCBDU1MgaW5oZXJpdGVkIGNvbG9yXG4gICAqL1xuICBASW5wdXQoKSBzZWNvbmRhcnlDb2xvcj86IHN0cmluZztcblxuICBwcm90ZWN0ZWQgZmluZEljb25EZWZpbml0aW9uKGk6IEljb25Qcm9wIHwgSWNvbkRlZmluaXRpb24pOiBJY29uRGVmaW5pdGlvbiB8IG51bGwge1xuICAgIGNvbnN0IGRlZmluaXRpb24gPSBzdXBlci5maW5kSWNvbkRlZmluaXRpb24oaSk7XG5cbiAgICBpZiAoZGVmaW5pdGlvbiAhPSBudWxsICYmICFBcnJheS5pc0FycmF5KGRlZmluaXRpb24uaWNvbls0XSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ1RoZSBzcGVjaWZpZWQgaWNvbiBkb2VzIG5vdCBhcHBlYXIgdG8gYmUgYSBEdW90b25lIGljb24uICcgK1xuICAgICAgICAgICdDaGVjayB0aGF0IHlvdSBzcGVjaWZpZWQgdGhlIGNvcnJlY3Qgc3R5bGU6ICcgK1xuICAgICAgICAgIGA8ZmEtZHVvdG9uZS1pY29uIFtpY29uXT1cIlsnZmFkJywgJyR7ZGVmaW5pdGlvbi5pY29uTmFtZX0nXVwiPjwvZmEtZHVvdG9uZS1pY29uPiBgICtcbiAgICAgICAgICBgb3IgdXNlOiA8ZmEtaWNvbiBpY29uPVwiJHtkZWZpbml0aW9uLmljb25OYW1lfVwiPjwvZmEtaWNvbj4gaW5zdGVhZC5gLFxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZGVmaW5pdGlvbjtcbiAgfVxuXG4gIHByb3RlY3RlZCBidWlsZFBhcmFtcygpIHtcbiAgICBjb25zdCBwYXJhbXMgPSBzdXBlci5idWlsZFBhcmFtcygpO1xuXG4gICAgaWYgKHRoaXMuc3dhcE9wYWNpdHkgPT09IHRydWUgfHwgdGhpcy5zd2FwT3BhY2l0eSA9PT0gJ3RydWUnKSB7XG4gICAgICBwYXJhbXMuY2xhc3Nlcy5wdXNoKCdmYS1zd2FwLW9wYWNpdHknKTtcbiAgICB9XG4gICAgaWYgKHRoaXMucHJpbWFyeU9wYWNpdHkgIT0gbnVsbCkge1xuICAgICAgcGFyYW1zLnN0eWxlc1snLS1mYS1wcmltYXJ5LW9wYWNpdHknXSA9IHRoaXMucHJpbWFyeU9wYWNpdHkudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuc2Vjb25kYXJ5T3BhY2l0eSAhPSBudWxsKSB7XG4gICAgICBwYXJhbXMuc3R5bGVzWyctLWZhLXNlY29uZGFyeS1vcGFjaXR5J10gPSB0aGlzLnNlY29uZGFyeU9wYWNpdHkudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgaWYgKHRoaXMucHJpbWFyeUNvbG9yICE9IG51bGwpIHtcbiAgICAgIHBhcmFtcy5zdHlsZXNbJy0tZmEtcHJpbWFyeS1jb2xvciddID0gdGhpcy5wcmltYXJ5Q29sb3I7XG4gICAgfVxuICAgIGlmICh0aGlzLnNlY29uZGFyeUNvbG9yICE9IG51bGwpIHtcbiAgICAgIHBhcmFtcy5zdHlsZXNbJy0tZmEtc2Vjb25kYXJ5LWNvbG9yJ10gPSB0aGlzLnNlY29uZGFyeUNvbG9yO1xuICAgIH1cblxuICAgIHJldHVybiBwYXJhbXM7XG4gIH1cbn1cbiJdfQ==